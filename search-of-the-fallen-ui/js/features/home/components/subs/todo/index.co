/**
 *  Defines the Todo sub component
 *
 *  @author  thad
 *  @date    Jan 11, 2017
 *
 */
import './todo.css';

import {stop} from '../../../../../fw/helper/event';

export default {
    bindings: {
        loading: '<',
        list: '<',
        onAdd: '&',
        onToggle: '&',
        onArchive: '&'
    },
    template: `
        <div id="todo-app">
            <h2>Simple TODO app</h2>
            <input autofocus type="text" placeholder="Typing here..." ng-keyup="$ctrl.addTodo($event)">

            <p ng-if="$ctrl.loading">Loading...</p>

            <span ng-if="!$ctrl.loading">{{ $ctrl.remaining() }} of {{ $ctrl.list.length }} remaining</span>

            <ul class="todos" ng-if="!$ctrl.loading">
                <li ng-repeat="todo in $ctrl.list">
                    <input type="checkbox" ng-checked="::todo.finished" ng-click="$ctrl.toggleTodo($event, todo)">
                    <span ng-style="{'text-decoration': todo.finished ? 'line-through' : 'none'}">
                        {{ todo.txt }}
                    </span>
                </li>
            </ul>

            <a ng-if="!$ctrl.loading" href="" class="archive" ng-disabled="$ctrl.remaining() === $ctrl.list.length" ng-click="$ctrl.onArchive()">
                archive
            </a>
        </div>
    `,
    controller: class {
        constructor() {}

        $onChanges(changesObj) {
            this.previousList = changesObj.list.currentValue;
        }

        $doCheck() {
            return this.list !== this.previousList;
        }

        addTodo(e) {
            if (e.keyCode !== 13) {
                return;
            }
            this.onAdd({
                todo: {
                    txt: e.target.value,
                    finished: false
                }
            });
            e.target.value = '';
        }

        toggleTodo(e, todo) {
            stop(e);
            this.onToggle({todo});
        }

        remaining() {
            return this.list.reduce((n, todo) => n + +!todo.finished, 0);
        }

    }
};
